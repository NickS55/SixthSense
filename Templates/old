<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>My first three.js app</title>
		<style>
			body { margin: 0; }
			canvas { display: block; }
		</style>
	</head>
	<body>
		<script type="module">
			import * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r115/build/three.module.js';

			import { OrbitControls } from './jsm/controls/OrbitControls.js';
			import { GLTFLoader } from './jsm/loaders/GLTFLoader.js';
			import { RGBELoader } from './jsm/loaders/RGBELoader.js';
			import { RoughnessMipmapper } from './jsm/utils/RoughnessMipmapper.js';

			var container, controls;
			var camera, scene, renderer;
			
			var scene = new THREE.Scene();
			var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

			var renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth, window.innerHeight );
			document.body.appendChild( renderer.domElement );

			{{/* //create baseball
			var loader = new THREE.TextureLoader();
			var geometry = new THREE.SphereGeometry();
			var material = new THREE.MeshBasicMaterial( { color: 0xf54fff } );
			var texture = new THREE.TextureLoader().load('baseball.jpg' );
			var material = new THREE.MeshBasicMaterial( { map: texture } ); 
			var rock = new THREE.Mesh( geometry, material );
			
			scene.add( rock );

			camera.position.z = 5;

	

			var animate = function () {
				requestAnimationFrame( animate );

				rock.rotation.x += 0.00;
				rock.rotation.y += 0.02;

				renderer.render( scene, camera );
			};

			animate(); */}}

			window.addEventListener( 'resize', onWindowResize, false );

			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );
				renderer.outputEncoding = THREE.sRGBEncoding;

				render();

			}
		</script>
	</body>
</html>